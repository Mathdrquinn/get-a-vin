{"version":3,"file":"static/webpack/static/development/pages/index.js.e3b191e687dd4ab2e28b.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import React from 'react';\nimport copyToClipboard from 'copy-to-clipboard';\nimport axios from 'axios';\n\nconst GET_VIN_URL = process.env.GET_VIN_URL;\nconst VIN_DETAILS_DOMAIN = process.env.VIN_DETAILS_DOMAIN;\n\nconst getVehicleByVin = (vin) => {\n    const url = `${VIN_DETAILS_DOMAIN}/api/vehicles/DecodeVinExtended/${vin}?format=json`\n    console.log(`Fetching VIN info from: ${url}`)\n    return axios.get(url)\n    .then(resp => resp.data.Results\n        .filter(r => r.Variable)\n        .filter(r => r.Value))\n    .then(results => results.reduce((sum, r) => ({ ...sum, [r.Variable]: r.Value }), {}))\n}\n\nconst getRandomVin = () => {\n    console.log(`Fetching random VIN from: ${GET_VIN_URL}`)\n    return axios.get(GET_VIN_URL)\n    .then(resp => resp.data)\n}\n\nclass Index extends React.Component {\n    state = {\n        vins: {},\n        errorMessage: null\n    };\n\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.copyVin = this.copyVin.bind(this);\n        this.getVins = this.getVins.bind(this);\n    }\n\n    componentDidMount() {\n        const vin = getRandomVin()\n            .then(data => {\n                console.log(data)\n                const foo = data;\n                debugger;\n            });\n        // getVehicleByVin(vin)\n        //     .then(vehicleInfo => {\n        //         this.setState({ vins: { [vin]: vehicleInfo }, errorMessage: null });\n        //     })\n        //     .catch(e => {\n        //         console.error(e)\n        //         this.setState({ errorMessage: e.message })\n        //     })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const vin = getRandomVin()\n        .then(d => {\n            debugger;\n        });\n        // getVehicleByVin(vin)\n        //     .then(vehicleInfo => {\n        //         this.setState({ vins: { [vin]: vehicleInfo, ...this.state.vins }, errorMessage: null });\n        //     })\n        //     .then(() => copyToClipboard(vin))\n        //     .catch(e => {\n        //         console.error(e)\n        //         this.setState({ errorMessage: e.message })\n        //     });\n    }\n\n    copyVin() {\n        copyToClipboard(this.getVins()[0]);\n    }\n\n    getVins() {\n        return Object.keys(this.state.vins);\n    }\n\n    render() {\n        return (\n            <main id=\"main\">\n                <h1>Generate a <abbr title=\"Vehicle Identification Number\">VIN</abbr></h1>\n                <p>Making it easy to generate and copy <abbr title=\"Vehicle Identification Numbers\">VINs</abbr></p>\n\n                <form onSubmit={this.onSubmit}>\n                    <h2 aria-live=\"polite\">Result: <em>{this.getVins()[0]}</em></h2>\n                    <button type=\"button\" onClick={this.copyVin}>Copy to Clipboard</button>\n                    <button type=\"submit\">Get and Copy new VIN</button>\n                    {\n                        this.state.errorMessage\n                            ? (<><h4>Error:</h4><p>{this.state.errorMessage}</p></>)\n                            : (\n                                <>\n                                    <h3>Vehicle Info</h3>\n                                    <pre><code>\n                                        {\n                                            ((vehicleInfo) => {\n                                                return vehicleInfo\n                                                    ? (\n                                                        JSON.stringify(vehicleInfo, null, 4)\n                                                    )\n                                                    : 'Loading...'\n                                            })(this.state.vins[this.getVins()[0]])\n                                        }\n                                    </code></pre>\n                                </>\n                            )\n                    }\n                </form>\n\n                {\n                    this.getVins().length > 1\n                    ? (\n                        <section>\n                            <h2>History</h2>\n                            <dl>\n                                {this.getVins().slice(1).map((v) => (\n                                    <>\n                                        <dt key={`${v}-term`}>\n                                            {v}\n                                        </dt>\n                                        <dd key={`${v}-definition`}>\n                                            <pre><code>{JSON.stringify(this.state.vins[v], null, 4)}</code></pre>\n                                        </dd>\n                                    </>\n                                ))}\n                            </dl>\n                        </section>\n                    )\n                    : null\n                }\n            </main>\n        );\n    }\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AAMA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAJA;AACA;AAFA;AACA;AAMA;AACA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAUA;AAKA;AAcA;AAEA;AAAA;AAGA;AAAA;AALA;AAiBA;;;;AA9GA;AACA;AAgHA;;;;A","sourceRoot":""}